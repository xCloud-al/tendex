version: '3'
name: tendexx-prod

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.tls.certresolver=letsencrypt
    # env_file:
    #   - "frontend/.env"
    networks:
      - traefik-network
    restart: always
    
  database:
    image: postgres:15.2
    volumes:
    - "./database/data:/var/lib/postgresql/data"
    env_file:
      - "database/.env"
    ports:
      - "54322:5432"
    networks:
      - traefik-network
    restart: always

  strapi:
    build:
      context: ./strapi
      dockerfile: ./Dockerfile
    env_file:
      - "./strapi/.env"
    volumes:
      - ./strapi/public/uploads:/opt/app/public/uploads
    labels:
      - traefik.enable=true
      - traefik.http.routers.strapi.rule=Host(`strapi.${DOMAIN}`)
      - traefik.http.routers.strapi.entrypoints=websecure
      - traefik.http.routers.strapi.tls=true
      - traefik.http.routers.strapi.tls.certresolver=letsencrypt
      - traefik.http.services.strapi.loadbalancer.server.port=1337
    depends_on:
      - database
    networks:
      - traefik-network
    restart: always

networks:
  traefik-network:
    name: traefik-network
    external: true

# docker compose up -d
